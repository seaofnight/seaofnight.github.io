<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>yjkim blog</title><link href="https://seaofnight.github.io/" rel="alternate"></link><link href="https://seaofnight.github.io/feeds/all.atom.xml" rel="self"></link><id>https://seaofnight.github.io/</id><updated>2019-09-14T18:20:00+09:00</updated><entry><title>centos-desktop-setting</title><link href="https://seaofnight.github.io/centos-desktop-setting.html" rel="alternate"></link><published>2019-09-14T18:20:00+09:00</published><updated>2019-09-14T18:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/centos-desktop-setting.html</id><summary type="html">&lt;p&gt;centos,desktop&lt;/p&gt;</summary><content type="html">&lt;h1&gt;how to gnome desktop install&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gnome desktop install 
$ sudo yum update  
$ yum group list  
$ yum groupinstall &lt;span class="s2"&gt;&amp;quot;GNOME Desktop&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Graphical Administration Tools&amp;quot;&lt;/span&gt; 
$ ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target 
$ sudo reboot 
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;tiger vnc install&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yum install tigervnc-server 
$ vncserver 
&lt;span class="c1"&gt;# modify option -&amp;gt; geometry : resolution &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="centos"></category><category term="desktop"></category></entry><entry><title>git-command-example</title><link href="https://seaofnight.github.io/git-command-example.html" rel="alternate"></link><published>2019-09-14T18:20:00+09:00</published><updated>2019-09-14T18:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/git-command-example.html</id><summary type="html">&lt;p&gt;git&lt;/p&gt;</summary><content type="html">&lt;h1&gt;common 명령어&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git init &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;일반 폴더에서 깃 저장소로 만들어 준다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git config &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;깃 저장소의 설정을 변경한다. 예시로 유저명, 메일등을 설정 할 수 있다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git config --global user.name &lt;span class="s2"&gt;&amp;quot;yjkim1@gmail.com&amp;quot;&lt;/span&gt; 
$ git config --global user.email &lt;span class="s2"&gt;&amp;quot;yjkim1@gamil.com&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git help &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git status &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;upload, download 관련&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;git add&lt;ul&gt;
&lt;li&gt;git 에 업로드 하기 위하여는 add commit 의 순서를 거치는데 우리가 어떤 파일을 로컬 레포에 저장할 것이다 라는 명령어이다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add . &lt;span class="c1"&gt;# current folder &lt;/span&gt;
$ git add readme.md &lt;span class="c1"&gt;# readme.md &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;git commit &lt;ul&gt;
&lt;li&gt;commit 시에는 message 를 날려주면 된다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git commit -m &lt;span class="s2"&gt;&amp;quot;add pelican source&amp;quot;&lt;/span&gt; 

&lt;span class="c1"&gt;# 그러면 아래와 같이 로그에 출력이 되며 깃헙에도 메시지가 올라가게 된다. &lt;/span&gt;
$ git log 
commit 4fb60f7260f17fee8cc5b6e4eaf779d8997a2a5a &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; gh-pages, origin/gh-pages&lt;span class="o"&gt;)&lt;/span&gt;
Author: yjkim &amp;lt;seaofnight@hanmail.net&amp;gt;
Date:   Sat Sep &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:58:04 &lt;span class="m"&gt;2019&lt;/span&gt; +0900

    add pelican &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git branch &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git checkout &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git branch 간에 이동을하거나 삭제를 하고자 할떄 사용한다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout branch_name 
&lt;span class="c1"&gt;# 변경하면 폴더도 해당 브렌치에 맞도록 변경이 된다. &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;git push &lt;ul&gt;
&lt;li&gt;local 레포에 있는 변경사항을 원격 레포로 업로드 한다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push origin master 
&lt;span class="c1"&gt;# 다른 레포지토리로 업로드 하고 싶으면 이렇게 하면 된다. &lt;/span&gt;
$ git push -u origin gh-pages

&lt;span class="c1"&gt;# 원격 레포의 브랜치 삭제 : git push --delete &amp;lt;remote-name&amp;gt; &amp;lt;branch-name&amp;gt;&lt;/span&gt;
$ git push --delete origin gh 
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;git pull &lt;ul&gt;
&lt;li&gt;git 원격 레포에 있는 내용을 가져오는 명령이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="git"></category></entry><entry><title>manjaro-local-setting</title><link href="https://seaofnight.github.io/manjaro-local-setting.html" rel="alternate"></link><published>2019-09-14T18:20:00+09:00</published><updated>2019-09-14T18:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/manjaro-local-setting.html</id><summary type="html">&lt;p&gt;local&lt;/p&gt;</summary><content type="html">&lt;h1&gt;oh-my-zsh install&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chsh -s &lt;span class="sb"&gt;`&lt;/span&gt;which zsh&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$SHELL&lt;/span&gt; 
curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;theme change &lt;/li&gt;
&lt;li&gt;terminal 환경에서  안깨지는 font 적용 후 확인  &lt;/li&gt;
&lt;li&gt;zsh autosuggestion install &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;byobu install&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://aur.archlinux.org/byobu.git
&lt;span class="nb"&gt;cd&lt;/span&gt; byobu
makepkg
pacman -U *.xz
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;kvm install&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;LC_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;C lscpu &lt;span class="p"&gt;|&lt;/span&gt; grep Virtualization
Virtualization: VT-x
sudo pacman -S virt-manager qemu vde2 ebtables dnsmasq bridge-utils openbsd-netcat
sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; libvirtd.service
sudo systemctl start libvirtd.service
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;virtualbox install&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -S virtualbox virtualbox-ext-vnc virtualbox-guest-dkms virtualbox-host-dkms virtualbox-guest-utils virtualbox-guest-iso virtualbox-sdk 

yjkim@yjkim-pc  ~/문서  uname -r
&lt;span class="m"&gt;4&lt;/span&gt;.19.66-1-MANJARO
sudo pacman -S linux419-virtualbox-host-modules
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;vscode hangul encodding&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;Ctrl + ,&lt;span class="o"&gt;]&lt;/span&gt;
* linux default terminal 에서 한글이 출력되는 font 로 변경 필요 
setting &amp;gt; editor.fontFamily : &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;DejaVu Sans Mono &lt;span class="k"&gt;for&lt;/span&gt; Powerline&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;shutdown freeze solving&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;https://forum.manjaro.org/t/how-to-troubleshoot-shutdown-delays/5767&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;install other package&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pacman -Ss -no-confirm jq, tree
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;firefox extension&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;translate&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;linux application remove password prompt&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;docker &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo usermod -a -G docker &lt;span class="nv"&gt;$USER&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;libvirtd, virt-manager &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo usermod -a -G libvirt &lt;span class="nv"&gt;$USER&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;python pip install on manjaro&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python2 --version
Python &lt;span class="m"&gt;2&lt;/span&gt;.7.16
python3 --version
Python &lt;span class="m"&gt;3&lt;/span&gt;.7.4

sudo pacman -S python-pip --noconfirm
&lt;/pre&gt;&lt;/div&gt;</content><category term="local"></category></entry><entry><title>vscode-extension-recommandation</title><link href="https://seaofnight.github.io/vscode-extension-recommandation.html" rel="alternate"></link><published>2019-09-14T18:20:00+09:00</published><updated>2019-09-14T18:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/vscode-extension-recommandation.html</id><summary type="html">&lt;p&gt;local&lt;/p&gt;</summary><content type="html">&lt;h1&gt;개요&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;vscode 를 스프링boot 개발에 사용해보았으나 그렇게 유용하지는 않았다. &lt;/li&gt;
&lt;li&gt;kubernetes, docker, git, 기타 shell oper 에 사용하기 유용한 몇가지만 추천해놓고 &lt;/li&gt;
&lt;li&gt;나중에 유용한게 나오면 추가 하는식으로 정리하겠다. &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;extension&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kubernetes &lt;ul&gt;
&lt;li&gt;cloud-code &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;editing &lt;ul&gt;
&lt;li&gt;markdown all in one &lt;/li&gt;
&lt;li&gt;markdown preview enhanced &lt;/li&gt;
&lt;li&gt;yaml&lt;/li&gt;
&lt;li&gt;partical diff&lt;/li&gt;
&lt;li&gt;vscode-pandoc &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;docker &lt;/li&gt;
&lt;li&gt;docker compose&lt;/li&gt;
&lt;li&gt;git graph &lt;/li&gt;
&lt;/ul&gt;</content><category term="local"></category><category term="vscode"></category></entry><entry><title>python pelican blog config</title><link href="https://seaofnight.github.io/pelican-blog-setting.html" rel="alternate"></link><published>2019-09-14T10:20:00+09:00</published><updated>2019-09-14T10:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/pelican-blog-setting.html</id><summary type="html">&lt;p&gt;pelican&lt;/p&gt;</summary><content type="html">&lt;h1&gt;install pelican dependency&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# virtualenv  &lt;/span&gt;
$ sudo pip install virtualenv

&lt;span class="c1"&gt;# pelican plugin &lt;/span&gt;
$ pip install pelican ghp-import Markdown typogrify pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;activate pelican venv&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir blog &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; blog
$ virtualenv -p python3 venv
$ &lt;span class="nb"&gt;source&lt;/span&gt; venv/bin/activate
$ &lt;span class="nb"&gt;source&lt;/span&gt; venv/bin/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;start pelican blog with pelican-quick-start&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pelican-quickstart

 &lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt; î‚° yjkim@yjkim-pc î‚° ~/workspaces/blog î‚° pelican-quickstart
Welcome to pelican-quickstart v4.1.1.

This script will &lt;span class="nb"&gt;help&lt;/span&gt; you create a new Pelican-based website.                                                          

Please answer the following questions so this script can generate the files               
needed by Pelican.                                                                                                     


&amp;gt; Where &lt;span class="k"&gt;do&lt;/span&gt; you want to create your new web site? &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;                                                                   
&amp;gt; What will be the title of this web site? yjkim blog                                                                  
&amp;gt; Who will be the author of this web site? yjkim                                                                       
&amp;gt; What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;ko&lt;span class="o"&gt;]&lt;/span&gt; ko                             
&amp;gt; Do you want to specify a URL prefix? e.g., https://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; n                
&amp;gt; Do you want to &lt;span class="nb"&gt;enable&lt;/span&gt; article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; Y                                                                    
&amp;gt; How many articles per page &lt;span class="k"&gt;do&lt;/span&gt; you want? &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;                                                                         
&amp;gt; What is your &lt;span class="nb"&gt;time&lt;/span&gt; zone? &lt;span class="o"&gt;[&lt;/span&gt;Europe/Paris&lt;span class="o"&gt;]&lt;/span&gt; Asia/Seoul                                                                    
&amp;gt; Do you want to generate a tasks.py/Makefile to automate generation and publishing? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; Y
&amp;gt; Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                                                
&amp;gt; Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                                                
&amp;gt; Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                                            
&amp;gt; Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                                                 
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                              
&amp;gt; Do you want to upload your website using GitHub Pages? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; Y            
&amp;gt; Is this your personal page &lt;span class="o"&gt;(&lt;/span&gt;username.github.io&lt;span class="o"&gt;)&lt;/span&gt;? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; Y                                                             
Done. Your new project is available at /home/yjkim/workspaces/blog    
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;install pelican themes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;pelican 은 다른 블로그 생성기와 마찬가지로 theme 를 여러 사람들이 제작해놓은 사이트 들이 있기에 참조하여서 만들어 주면 된다. &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone --recursive https://github.com/getpelican/pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;install pelican plugin&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;요기는 추가로 정리 예정 &lt;/li&gt;
&lt;li&gt;추천하는 plugin 이 있어보임 &lt;/li&gt;
&lt;li&gt;https://github.com/getpelican/pelican-plugins&lt;/li&gt;
&lt;li&gt;https://www.sysadminnotes.ca/worknotes/useful-pelican-plugins.html&lt;/li&gt;
&lt;/ul&gt;</content><category term="pelican"></category><category term="publishing"></category></entry><entry><title>tmux-byobu-cheat-sheet</title><link href="https://seaofnight.github.io/tmux-byobu-cheat-sheet.html" rel="alternate"></link><published>2019-09-14T10:20:00+09:00</published><updated>2019-09-14T10:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/tmux-byobu-cheat-sheet.html</id><summary type="html">&lt;p&gt;tmux-byobu,cheat-sheet&lt;/p&gt;</summary><content type="html">&lt;h1&gt;tmux&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;개요 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tmux 는 screen 멀티플렉서 프로그램으로 gnu환경에서 terminal 을 분리 활용 할 수 있는 프로그램이다. &lt;/li&gt;
&lt;li&gt;tmux 는 단축키를 이용하기위하 호출하는 명령어가 있는데 기본적으로 Ctrl + b 를 누르면 단축키가 입력 가능하다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shoutcut&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 스크롤 
Ctrl + b [
# 화면 종분할 
Ctrl + b &amp;quot;
# 화면 횡분할
Ctrl + b %

# 입력 커서의 화면이동 
Ctrl + b 화살키 (1번만 이동)

# 화면 다음화면으로 
Ctrl + b o 

# 화면 사이즈 조절 방법 

(ctrl + b, :) 
## 하단 입력창에 타이핑
resize-pane -L 10 
            -R 10 
            -D 10 
            -U 10 

# 화면 레이아웃 변경 
ctrl + b, spacebar 
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;byobu&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;byobu 는 백엔드로 screen, tmux 등 스크린 멀티플렉서를 내장하여 실행하도록 되어있으며 &lt;/li&gt;
&lt;li&gt;단축키가 screen, tmux에 비하여 심플하다. &lt;/li&gt;
&lt;li&gt;그래서 우선 로컬PC에는 byobu 개발용 서버에는 screen or tmux 중에 하나를 깔고 실행하며 운영에는.. 깔지 않는다. &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# new window &lt;/span&gt;
F2

&lt;span class="c1"&gt;# next window &lt;/span&gt;
F4

&lt;span class="c1"&gt;# preous window &lt;/span&gt;
F3 

&lt;span class="c1"&gt;# 화면 분할&lt;/span&gt;
Ctrl + F2 
Shift + F2 

&lt;span class="c1"&gt;# 여러 화면에 동일 Command 입력 &lt;/span&gt;
Shift + F9
&lt;/pre&gt;&lt;/div&gt;</content><category term="tmux"></category><category term="byobu"></category><category term="cheat-sheet"></category></entry><entry><title>virsh-cheat-sheet</title><link href="https://seaofnight.github.io/virsh-cheat-sheet.html" rel="alternate"></link><published>2019-09-14T10:20:00+09:00</published><updated>2019-09-14T10:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/virsh-cheat-sheet.html</id><summary type="html">&lt;p&gt;virsh,cheat-sheet&lt;/p&gt;</summary><content type="html">&lt;h1&gt;list&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh list 
virsh list --all
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;start&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh start &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;machine view&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh dominfo &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;machine get domid&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh domid &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_nm&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;machine get domname&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh domname &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;machine down&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh shutdown &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;machine reboot&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh reboot &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;machine remove&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh destroy &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;machine remove&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh undefine &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;vm_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;machine autostart loop&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;virsh list --uuid&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; virsh autostart &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;machine create&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;NODE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;provision
    &lt;span class="nv"&gt;VRAM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;
    &lt;span class="nv"&gt;VCPU&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
    &lt;span class="nv"&gt;OSTYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux
    &lt;span class="nv"&gt;OSVARIANT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;virtio26
    &lt;span class="nv"&gt;DISK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;path=/data/kvm_disk/container-linux/container-linux1.qcow2,format=qcow2,bus=virtio&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;NETWORK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;network:ovs-network,mac=52:54:00:fe:b3:c0&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;OUTPUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/libvirt/container-linux/container-linux1/domain.xml

    virt-install 
        --connect qemu:///system &lt;span class="se"&gt;\&lt;/span&gt;
        --import &lt;span class="se"&gt;\&lt;/span&gt;
        --name &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;NODE_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        --ram &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;VRAM&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;
        --vcpus &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;VCPU&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        --os-type&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OSTYPE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        --os-variant&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OSVARIANT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        --disk &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DISK&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        --network &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;NETWORK&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        --vnc --noautoconsole &lt;span class="se"&gt;\&lt;/span&gt;
        --print-xml &amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OUTPUT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

    sed -ie &lt;span class="s1"&gt;&amp;#39;s|type=&amp;quot;kvm&amp;quot;|type=&amp;quot;kvm&amp;quot; xmlns:qemu=&amp;quot;http://libvirt.org/schemas/domain/qemu/1.0&amp;quot;|&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OUTPUT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    sed -i &lt;span class="s2"&gt;&amp;quot;/&amp;lt;\/devices&amp;gt;/a &amp;lt;qemu:commandline&amp;gt;\n  &amp;lt;qemu:arg value=&amp;#39;-fw_cfg&amp;#39;/&amp;gt;\n  &amp;lt;qemu:arg value=&amp;#39;name=opt/com.coreos/config,file=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ignition_file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;/&amp;gt;\n&amp;lt;/qemu:commandline&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OUTPUT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

    virsh define &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OUTPUT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    virsh start &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;NODE_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;view kvm network command&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virsh net-list 

virsh net-destroy &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;netid&lt;/span&gt;&lt;span class="p"&gt; | name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

virsh net-edit &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;network&lt;/span&gt;&lt;span class="p"&gt;-name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

virsh net-create &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;network&lt;/span&gt;&lt;span class="p"&gt;-spec-file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="virsh"></category><category term="cheat-sheet"></category></entry></feed>