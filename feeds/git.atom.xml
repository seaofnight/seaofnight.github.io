<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>yjkim blog - git</title><link href="https://seaofnight.github.io/" rel="alternate"></link><link href="https://seaofnight.github.io/feeds/git.atom.xml" rel="self"></link><id>https://seaofnight.github.io/</id><updated>2019-09-14T18:20:00+09:00</updated><entry><title>git-command-example</title><link href="https://seaofnight.github.io/git-command-example.html" rel="alternate"></link><published>2019-09-14T18:20:00+09:00</published><updated>2019-09-14T18:20:00+09:00</updated><author><name>yjkim</name></author><id>tag:seaofnight.github.io,2019-09-14:/git-command-example.html</id><summary type="html">&lt;p&gt;git&lt;/p&gt;</summary><content type="html">&lt;h1&gt;common 명령어&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git init &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;일반 폴더에서 깃 저장소로 만들어 준다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git config &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;깃 저장소의 설정을 변경한다. 예시로 유저명, 메일등을 설정 할 수 있다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git config --global user.name &lt;span class="s2"&gt;&amp;quot;yjkim1@gmail.com&amp;quot;&lt;/span&gt; 
$ git config --global user.email &lt;span class="s2"&gt;&amp;quot;yjkim1@gamil.com&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git help &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git status &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;upload, download 관련&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;git add&lt;ul&gt;
&lt;li&gt;git 에 업로드 하기 위하여는 add commit 의 순서를 거치는데 우리가 어떤 파일을 로컬 레포에 저장할 것이다 라는 명령어이다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add . &lt;span class="c1"&gt;# current folder &lt;/span&gt;
$ git add readme.md &lt;span class="c1"&gt;# readme.md &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;git commit &lt;ul&gt;
&lt;li&gt;commit 시에는 message 를 날려주면 된다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git commit -m &lt;span class="s2"&gt;&amp;quot;add pelican source&amp;quot;&lt;/span&gt; 

&lt;span class="c1"&gt;# 그러면 아래와 같이 로그에 출력이 되며 깃헙에도 메시지가 올라가게 된다. &lt;/span&gt;
$ git log 
commit 4fb60f7260f17fee8cc5b6e4eaf779d8997a2a5a &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; gh-pages, origin/gh-pages&lt;span class="o"&gt;)&lt;/span&gt;
Author: yjkim &amp;lt;seaofnight@hanmail.net&amp;gt;
Date:   Sat Sep &lt;span class="m"&gt;14&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:58:04 &lt;span class="m"&gt;2019&lt;/span&gt; +0900

    add pelican &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;git branch &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git checkout &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git branch 간에 이동을하거나 삭제를 하고자 할떄 사용한다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout branch_name 
&lt;span class="c1"&gt;# 변경하면 폴더도 해당 브렌치에 맞도록 변경이 된다. &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;git push &lt;ul&gt;
&lt;li&gt;local 레포에 있는 변경사항을 원격 레포로 업로드 한다. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push origin master 
&lt;span class="c1"&gt;# 다른 레포지토리로 업로드 하고 싶으면 이렇게 하면 된다. &lt;/span&gt;
$ git push -u origin gh-pages

&lt;span class="c1"&gt;# 원격 레포의 브랜치 삭제 : git push --delete &amp;lt;remote-name&amp;gt; &amp;lt;branch-name&amp;gt;&lt;/span&gt;
$ git push --delete origin gh 
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;git pull &lt;ul&gt;
&lt;li&gt;git 원격 레포에 있는 내용을 가져오는 명령이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;local 에서 repo 만들어서 remote 로 올리기&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# init 로 프로젝트 생성 &lt;/span&gt;
git init 

&lt;span class="c1"&gt;# 설정정보 등록 &lt;/span&gt;
git config --global user.name &lt;span class="s2"&gt;&amp;quot;yjkim&amp;quot;&lt;/span&gt;
git config --global user.email seaofnight@hanmail.net

&lt;span class="c1"&gt;# remote 정보 등록, 해당 remote 가 public 사이트이면 프로젝트 생성해야함. e.g github&lt;/span&gt;
git remote add origin https://github.com/seaofnight/vitess-example.git

&lt;span class="c1"&gt;# 병합하기 위하여 pull&lt;/span&gt;
git pull origin master

&lt;span class="c1"&gt;# 업로드 &lt;/span&gt;
git push origin master
&lt;/pre&gt;&lt;/div&gt;</content><category term="git"></category></entry></feed>