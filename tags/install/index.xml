<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>install on Dev Blog</title>
    <link>https://seaofnight.github.io/tags/install/</link>
    <description>Recent content in install on Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>.</copyright>
    <lastBuildDate>Sun, 07 Jun 2020 10:58:08 -0400</lastBuildDate>
    
	<atom:link href="https://seaofnight.github.io/tags/install/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rook-ceph 설치 및 rbd 연동 </title>
      <link>https://seaofnight.github.io/posts/rook-ceph-install/</link>
      <pubDate>Sun, 07 Jun 2020 10:58:08 -0400</pubDate>
      
      <guid>https://seaofnight.github.io/posts/rook-ceph-install/</guid>
      <description>Install git clone https://github.com/rook/rook.git cd cluster/examples/kubernetes/ceph kubectl create -f common.yaml kubectl create -f operator.yaml # 아래는 예시입니다. ## ceph cluster 설정에 맞추어서 변경을 해주셔야 합니다. cat &amp;lt;&amp;lt;EOF | kubectl create -f - --- apiVersion: ceph.rook.io/v1 kind: CephCluster metadata: name: rook-ceph namespace: rook-ceph spec: cephVersion: image: ceph/ceph:v14.2.4-20190917 allowUnsupported: true dataDirHostPath: /var/lib/rook skipUpgradeChecks: false mon: count: 1 allowMultiplePerNode: true dashboard: enabled: true monitoring: enabled: false # requires Prometheus to be pre-installed rulesNamespace: rook-ceph network: hostNetwork: false rbdMirroring: workers: 0 mgr: modules: # the pg_autoscaler is only available on nautilus or newer.</description>
    </item>
    
    <item>
      <title>ceph ansible simple installation</title>
      <link>https://seaofnight.github.io/posts/ceph-install-with-ansible/</link>
      <pubDate>Mon, 01 Jun 2020 10:58:08 -0400</pubDate>
      
      <guid>https://seaofnight.github.io/posts/ceph-install-with-ansible/</guid>
      <description>개요  회사에서 Ceph 를 계속 스터디를 하고 있었으나. K8s Cluster 에 올려놓고 사용만 하고있었지 Baremetal 에 올려 사용하지는 않고있었다. 자세하게 사용하기도 해야할 뿐더러 여러가지 옵션을 테스트 및 운용하기 위한 클러스터 구축을 정리하기 위하여 본 포스팅을 정리한다. Ceph 설치방법은 Ceph-ansible 이며 stable-3.2 버전을 이용하여 설치 하였다. 설치 노드는  mon 1, osd 3, mgr 1 이며 mon1 과 mgr1, osd1 이 같은 호스트에 배포가 되었다. ceph0 10.0.3.2 8cpu 16gb ram, /dev/sdb 300gb ceph1 10.</description>
    </item>
    
    <item>
      <title>vitess</title>
      <link>https://seaofnight.github.io/posts/vitess-install/</link>
      <pubDate>Mon, 01 Jun 2020 10:58:08 -0400</pubDate>
      
      <guid>https://seaofnight.github.io/posts/vitess-install/</guid>
      <description>vitess 소개 오늘 포스팅 할 내용은 사내에서 사용하지 않기로 한 Vitess 라는 솔루션에 대한 기록 및 조사한 내용을 공유하는 자리를 가지도록 하곘다. 비교제품군이 있으며 비교제품중에 선택이 되었으므로 사용 안할것 같은 내용은 기록을 하여 남기도록 하겠다. Vitess 는 Youtube 에 mysql 을 ScaleOut 하기 위하여 개발이 되었으며 제품 소개 자료에서도 Scaleout에 대한 기능에 대하여 강점을 많이 설명을 하는 제품이다. 하지만 Mysql 은 아래쪽에 있을뿐 다른 무언가가 많이 붙어 있는것을 볼수 있다. 붙어 있는 컴포넌트에 대한 대략적인 설명을 하고 가겠다.</description>
    </item>
    
  </channel>
</rss>